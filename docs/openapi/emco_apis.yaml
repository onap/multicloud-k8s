
openapi: 3.0.2
info:
  version: '2.0.0'

  title: EMCO

  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: 'https://redocly.github.io/openapi-template/logo.png'

  description: |
    EMCO - Edge Multi Cluster Orchestrator
    # Introduction
    Application Orchestration - For applications and services delivered across multiple administrative infrastructures

externalDocs:
  description: Wiki for the API's.
  url: 'https://wiki.onap.org/display/DW/V2+API+Specification'

tags:
  - name: v2
    description: |
     V2 API's

paths:
  ############################ Project API'S #################################################
  /projects:
    $ref: 'paths/projects.yaml'

  /projects/{project-name}:
      $ref: 'paths/project.yaml'

  ############################ Application API'S #################################################
  /projects/{project-name}/composite-apps:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
    post:
      tags:
        - Composite Application
      summary: Add Composite Application
      description: Add a new `composite application`
      operationId: addCompositeApplication
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'components/schemas.yaml#/CompositeAppVersion'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'components/schemas.yaml#/CompositeAppVersion'
        description: Composite application definition
        required: true

    get: # documentation for GET operation for this path
      tags:
        - Composite Application
      summary: Get all Composite Applications

      description: |
        Get all `composite applications`

      operationId: getAllCompositeApplications
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/CompositeAppVersionArray'
        '404':
          description: No Composite App found
          content: {}

  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
    get: # documentation for GET operation for this path
      tags:
        - Composite Application
      summary: Get Composite Application

      description: |
        Get `composite application`

      operationId: getCompositeApplicationByName
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/CompositeAppVersion'
        '404':
          description: Composite Application not found
          content: {}
    put:
      tags:
        - Composite Application
      summary: Update a Composite Application
      description: Update a `Composite Application`
      operationId: updateCompositeApplication
      responses:
        '200':
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/CompositeAppVersion'
          description: Success
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Composite Application not found
          content: {}
      # request body documentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'components/schemas.yaml#/CompositeAppVersion'
        description: Composite application definition
        required: true

    delete: # documentation for DELETE operation for this path
      tags:
        - Composite Application
      summary: Delete Composite Application

      description: |
        Delete `Composite Application`

      operationId: deleteCompositeAppByName
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Composite Application not found
          content: {}

  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/apps:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
    post:
      tags:
        - Composite Application
      summary: Add app to Composite Application
      description: Add a new  `app to composite application`
      operationId: addAppToCompositeApplication
      responses:
        '201':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
        '405':
          description: Invalid Input
          content: {}
      # request body documentation
      requestBody:
        content:
          multipart/form-data: # Media type
            schema:            # Request payload
              $ref: 'components/schemas.yaml#/AppData'
        required: true

    get: # documentation for GET operation for this path
      tags:
        - Composite Application
      summary: Get all apps in Composite Application

      description: |
        Get all `apps in composite application`

      operationId: getAllAppsInCompositeApplication
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/MetadataArray'
        '404':
          description: No Apps found in Composite Application
          content: {}

  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/apps/{app-name}:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/appName'
    get: # documentation for GET operation for this path
      tags:
        - Composite Application
      summary: Get Application

      description: |
        Get `application`

      operationId: getAppCompositeApplication
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
            application/octet-stream: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/File'
            multipart/form-data: # Media type
              schema:            # Request payload
                $ref: 'components/schemas.yaml#/AppData'

        '404':
          description: Application not found
          content: {}
    put:
      tags:
        - Composite Application
      summary: Update app in Composite Application
      description: Update app in `Composite Application`
      operationId: updateAppToCompositeApplication
      responses:
        '200':
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
          description: Success
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Application not found
          content: {}
      # request body documentation
      requestBody:
        content:
          multipart/form-data: # Media type
            schema:            # Request payload
              $ref: 'components/schemas.yaml#/AppData'
        required: true
    delete: # documentation for DELETE operation for this path
      tags:
        - Composite Application
      summary: Delete Application

      description: |
        Delete `application`

      operationId: deleteAppToCompositeApplication
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Application not found
          content: {}

############################ PROFILE API'S #################################################
  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/composite-profiles:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
    post:
      tags:
        - Composite Profile
      summary: Add Composite Profile
      description: Add a new `composite profile`
      operationId: addCompositeProfile
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'components/schemas.yaml#/Metadata'
        description: Composite Profile definition
        required: true

    get: # documentation for GET operation for this path
      tags:
        - Composite Profile
      summary: Get all Composite Profiles

      description: |
        Get all `profiles in a composite application`

      operationId: getAllProfilesInCompositeApplication
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/MetadataArray'
        '404':
          description: No composite profile found
          content: {}

  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/composite-profiles/{composite-profile-name}:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/compositeProfileName'
    get: # documentation for GET operation for this path
      tags:
        - Composite Profile
      summary: Get Composite Profile

      description: |
        Get `composite profile`

      operationId: getCompositeProfileByName
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
        '404':
          description: Composite Profile not found
          content: {}
    put:
      tags:
        - Composite Profile
      summary: Update Composite Profile
      description: Update `Composite Profile`
      operationId: updateCompositeProfile
      responses:
        '200':
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
          description: Success
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Composite Profile not found
          content: {}
      # request body documentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'components/schemas.yaml#/Metadata'
        description: Composite Profile definition
        required: true
    delete: # documentation for DELETE operation for this path
      tags:
        - Composite Profile
      summary: Delete Composite Profile

      description: |
        Delete `Composite Profile`

      operationId: deleteCompositeProfileByName
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Composite Profile not found
          content: {}

  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/composite-profiles/{composite-profile-name}/profiles:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/compositeProfileName'
    post:
      tags:
        - Composite Profile
      summary: Add app profile to Composite Profile
      description: Add a `profile for application`
      operationId: addProfileToCompositeProfile
      responses:
        '201':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/ProfileAppSpec'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
          multipart/form-data: # Media type
            schema:            # Request payload
              $ref: 'components/schemas.yaml#/ProfileAppData'
    get: # documentation for GET operation for this path
      tags:
        - Composite Profile
      summary: Get all app profiles in Composite Profiles

      description: |
        Get all `app profiles in a composite Profile`

      operationId: getAllProfilesInCompositeProfile
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/ProfileAppSpecArray'
        '404':
          description: No profile found
          content: {}

  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/composite-profiles/{composite-profile-name}/profiles/{profile-name}:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/compositeProfileName'
      - $ref: 'components/parameters.yaml#/profileName'
    get: # documentation for GET operation for this path
      tags:
        - Composite Profile
      summary: Get profile from Composite Profile

      description: |
        Get `profile from composite profile`

      operationId: getProfile
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/ProfileAppSpec'
            application/octet-stream: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/File'
            multipart/form-data: # Media type
              schema:            # Request payload
                $ref: 'components/schemas.yaml#/ProfileAppData'

        '404':
          description: Profile not found
          content: {}
    put:
      tags:
        - Composite Profile
      summary: Update Composite Profile for an app
      description: Update `Profile`
      operationId: updateProfile
      responses:
        '200':
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/ProfileAppSpec'
          description: Success
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Profile not found
          content: {}
      # request body documentation
      requestBody:
        content:
          multipart/form-data: # Media type
            schema:            # Request payload
              $ref: 'components/schemas.yaml#/ProfileAppData'
        required: true
    delete: # documentation for DELETE operation for this path
      tags:
        - Composite Profile
      summary: Delete Profile

      description: |
        Delete `profile in Composite Profile`

      operationId: deleteProfile
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Profile not found
          content: {}

  # Qurey for Profile - Get profile for app-name
  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/composite-profiles/{composite-profile-name}/profiles/:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/compositeProfileName'
      - in: query
        name: app-name
        schema:
          type: string
          maxLength: 128
        required: true

    get: # documentation for GET operation for this path
      tags:
        - Composite Profile
      summary: Query profile for an application

      description: |
        Query `profile for an application`

      operationId: queryProfileForApp
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/ProfileAppSpec'
            application/octet-stream: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/File'
            multipart/form-data: # Media type
              schema:            # Request payload
                $ref: 'components/schemas.yaml#/ProfileAppData'
        '404':
          description: Profile for application not found
          content: {}


############################ GENERIC PLACEMENT INTENT API'S #################################################
  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/generic-placement-intents:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
    post:
      tags:
        - Generic Placement Intent
      summary: Add Generic Placement Intent
      description: Add a new `generic placement intent`
      operationId: addGenericPlacementIntent
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'components/schemas.yaml#/GenericPlacementIntent'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'components/schemas.yaml#/GenericPlacementIntent'
        description: Generic Placement Intent definition
        required: true

    get: # documentation for GET operation for this path
      tags:
        - Generic Placement Intent
      summary: Get all Generic Placement Intents

      description: |
        Get all `Generic Placement Intents`

      operationId: getAllGenericPlacementIntents
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/GenericPlacementIntentArray'
        '404':
          description: No Generic Placement Intent found
          content: {}

  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/generic-placement-intents/{generic-placement-intent-name}:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/genericPlacementIntentName'
    get: # documentation for GET operation for this path
      tags:
        - Generic Placement Intent
      summary: Get Generic Placement Intent

      description: |
        Get `generic placement intent`

      operationId: getGenericPlacementIntentByName
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/GenericPlacementIntent'
        '404':
          description: Generic Placement Intent not found
          content: {}
    put:
      tags:
        - Generic Placement Intent
      summary: Update Generic Placement Intent
      description: Update `Generic Placement Intent`
      operationId: updateGenericPlacementIntent
      responses:
        '200':
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/GenericPlacementIntent'
          description: Success
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Generic Placement Intent not found
          content: {}
      # request body documentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'components/schemas.yaml#/GenericPlacementIntent'
        description: Generic Placement Intent definition
        required: true
    delete: # documentation for DELETE operation for this path
      tags:
        - Generic Placement Intent
      summary: Delete Generic Placement Intent

      description: |
        Delete `Generic Placement Intent`

      operationId: deleteGenericPlacementIntentByName
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Generic Placement Intent not found
          content: {}

  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/generic-placement-intents/{generic-placement-intent-name}/app-intents:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/genericPlacementIntentName'
    post:
      tags:
        - Generic Placement Intent
      summary: Add intent for an application
      description: Add a `intent for application`
      operationId: addIntentToGenericPlacementIntent
      responses:
        '201':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/GenericPlacementAppIntent'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
          application/json: # Media type
            schema:            # Request payload
              $ref: 'components/schemas.yaml#/GenericPlacementAppIntent'
    get: # documentation for GET operation for this path
      tags:
        - Generic Placement Intent
      summary: Get all Intents in Generic Placement

      description: |
        Get all ` Intents in Generic Placement Intent`

      operationId: getAllIntentsInGenericPlacementIntents
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/GenericPlacementAppIntentArray'
        '404':
          description: No Generic Placement Intent found
          content: {}

  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/generic-placement-intents/{generic-placement-intent-name}/app-intents/{intent-name}:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/genericPlacementIntentName'
      - $ref: 'components/parameters.yaml#/intentName'

    get: # documentation for GET operation for this path
      tags:
        - Generic Placement Intent
      summary: Get intent

      description: |
        Get `generic placement intent`

      operationId: getIntentfromGenericPlacementIntent
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/GenericPlacementAppIntent'

        '404':
          description: Intent  not found
          content: {}
    put:
      tags:
        - Generic Placement Intent
      summary: Update intent for an application
      description: Update `generic placement intent for application`
      operationId: updateIntentToGenericPlacementIntent
      responses:
        '200':
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/GenericPlacementAppIntent'
          description: Success
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Generic placement intent not found
          content: {}
      # request body documentation
      requestBody:
        content:
         application/json: # Media type
            schema:            # Request payload
              $ref: 'components/schemas.yaml#/GenericPlacementAppIntent'
        required: true

    delete: # documentation for DELETE operation for this path
      tags:
        - Generic Placement Intent
      summary: Delete intent

      description: |
        Delete `generic placement intent`

      operationId: deleteIntentFromGenericPlacementIntent
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Intent not found
          content: {}

  # Qurey for Intent - Get intent for app-name
  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/generic-placement-intents/{generic-placement-intent-name}/app-intents/:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/genericPlacementIntentName'
      - in: query
        name: app-name
        schema:
          type: string
          maxLength: 128
        required: true

    get: # documentation for GET operation for this path
      tags:
        - Generic Placement Intent
      summary: Query intent for an application

      description: |
        Query `generic placement intent for application`

      operationId: queryIntentfromGenericPlacementIntent
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/GenericPlacementAppIntent'
        '404':
          description: Generic Placement Intent for application not found
          content: {}

############################ Deployment Intent Group API'S #################################################
  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
    post:
      tags:
        - Deployment Intent Group
      summary: Add Deployment Intent Group
      description: Add a new `deployment intent group`
      operationId: addDeploymentIntentGroup
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'components/schemas.yaml#/DeploymentGroupIntent'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'components/schemas.yaml#/DeploymentGroupIntent'
        description: Deployment Intent Group definition
        required: true
    get: # documentation for GET operation for this path
      tags:
        - Deployment Intent Group
      summary: Get all Deployment Intent Group

      description: |
        Get all `Deployment Intent Group`

      operationId: getAllDeploymentIntentGroup
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/DeploymentGroupIntentArray'
        '404':
          description: No Deployment Intent Group found
          content: {}

  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/deploymentIntentGroupName'
    get: # documentation for GET operation for this path
      tags:
        - Deployment Intent Group
      summary: Get Deployment Intent Group

      description: |
        Get `Deployment Intent Group`

      operationId: getDeploymentIntentGroupByName
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/DeploymentGroupIntent'
        '404':
          description: Deployment Intent Group not found
          content: {}
    put:
      tags:
        - Deployment Intent Group
      summary: Update Deployment Intent Group
      description: Update `Deployment Intent Group`
      operationId: updateDeploymentIntentGroup
      responses:
        '200':
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/DeploymentGroupIntent'
          description: Success
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Deployment Intent Group not found
          content: {}
      # request body documentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'components/schemas.yaml#/DeploymentGroupIntent'
        description: Deployment Intent Group definition
        required: true

    delete: # documentation for DELETE operation for this path
      tags:
        - Deployment Intent Group
      summary: Delete Deployment Intent Group

      description: |
        Delete `Deployment Intent Group`

      operationId: deleteDeploymentIntentGroupByName
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Deployment Intent Group not found
          content: {}

  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/intents/:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/deploymentIntentGroupName'
    post:
      tags:
        - Deployment Intent Group
      summary: Add Intent
      description: Add `deployment Intent`
      operationId: addIntentToDeploymentIntentGroup
      responses:
        '201':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/DeploymentIntent'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
          application/json: # Media type
            schema:            # Request payload
              $ref: 'components/schemas.yaml#/DeploymentIntent'
    get: # documentation for GET operation for this path
      tags:
        - Deployment Intent Group
      summary: Get all intents in Deployment Intent Group

      description: |
        Get all `intents in deployment intent group`

      operationId: getAllIntentsInDeploymentIntentGroup
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/DeploymentIntentArray'
        '404':
          description: No Deployment Intent Group found
          content: {}


  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/intents/{intent-name}:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/deploymentIntentGroupName'
      - $ref: 'components/parameters.yaml#/intentName'

    get: # documentation for GET operation for this path
      tags:
        - Deployment Intent Group
      summary: Get intent for an application

      description: |
        Get `Deployment Intent`

      operationId: getIntentForDeploymentIntentGroup
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/DeploymentIntent'

        '404':
          description: Deployment Intent not found
          content: {}
    put:
      tags:
        - Deployment Intent Group
      summary: Update intent
      description: Update `deployment intent`
      operationId: updateIntentToDeploymentIntentGroup
      responses:
        '200':
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/DeploymentIntent'
          description: Success
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Intent not found
          content: {}
      # request body documentation
      requestBody:
        content:
         application/json: # Media type
            schema:            # Request payload
              $ref: 'components/schemas.yaml#/DeploymentIntent'
        required: true
    delete: # documentation for DELETE operation for this path
      tags:
        - Deployment Intent Group
      summary: Delete intent

      description: |
        Delete `intent`

      operationId: deleteIntentFromDeploymentIntentGroup
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Deployment intent not found
          content: {}
   #Query
  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/intents:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/deploymentIntentGroupName'
      - in: query
        name: intent
        schema:
          type: string
          maxLength: 128
        required: true

    get: # documentation for GET operation for this path
      tags:
        - Deployment Intent Group
      summary: Query intent

      description: |
        Query `Deployment Intent`

      operationId: queryIntentForDeploymentIntentGroup
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/DeploymentIntent'
        '404':
          description: Deployment Intent not found
          content: {}

####################Lifecycle Management#######################################
  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/approve:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/deploymentIntentGroupName'
    post:
      tags:
        - Deployment Lifecycle
      summary: Approve a Deployment
      description: Approve a  Deployment
      operationId: approveDeploymentIntentGroup
      responses:
        '201':
          description: Success
          content: {}
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content: {}

  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/instantiate:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/deploymentIntentGroupName'
    post:
      tags:
        - Deployment Lifecycle
      summary: Instantiate a Deployment
      description: Instantiate a  Deployment
      operationId: instantiateDeploymentIntentGroup
      responses:
        '201':
          description: Success
          content: {}
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content: {}

  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/terminate:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/deploymentIntentGroupName'
    post:
      tags:
        - Deployment Lifecycle
      summary: Terminate a Deployment
      description: Terminate a  Deployment
      operationId: terminateDeploymentIntentGroup
      responses:
        '200':
          description: Success
          content: {}
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content: {}

  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/status:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/deploymentIntentGroupName'
    get:
      tags:
        - Deployment Lifecycle
      summary: Status of Deployment
      description: Status of  Deployment
      operationId: statusDeploymentIntentGroup
      responses:
        '200':
          description: Success
          content: {}
        '404':
          description: No Status found
          content: {}

############################ Controller Registration API'S #################################################
  /controllers:
    post:
      tags:
        - Controller Registration
      summary: Controller Registration
      description: Add a new `controller`
      operationId: addController
      responses:
        '201':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Controller'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
          application/json:
            schema:
                $ref: 'components/schemas.yaml#/Controller'
        description: Controller Info
        required: true
    get: # documentation for GET operation for this path
          tags:
            - Controller Registration
          summary: Get all controllers

          description: |
            Get all `controllers`

          operationId: getControllers
          responses: # list of responses
            '200':
              description: Success
              content:
                application/json: # operation response mime type
                  schema:
                    $ref: 'components/schemas.yaml#/ControllerArray'
            '404':
              description: No controllers found
              content: {}

  /controllers/{controller-name}:
    # parameters list that are used with each operation for this path
    parameters:
    - $ref: 'components/parameters.yaml#/controllerName'
    get: # documentation for GET operation for this path
      tags:
        - Controller Registration
      summary: Get controller by name

      description: |
        Get `controller`

      operationId: getController
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Controller'
        '404':
          description: Controller not found
          content: {}
    put:
      tags:
        - Controller Registration
      summary: Update controller
      description: Update `controller`
      operationId: updateController
      responses:
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Controller'
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Controller not found
          content: {}
      # request body documentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'components/schemas.yaml#/Controller'
        description: Update controllers object
        required: true
    delete: # documentation for DELETE operation for this path
      tags:
        - Controller Registration
      summary: Delete controller

      description: |
        Delete `controller`

      operationId: deleteController
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Controller not found
          content: {}

############################ Cluster Provider API'S #################################################
  /cluster-providers:
    post:
      tags:
        - Cluster Providers
      summary: Cluster Providers
      description: Add a new `cluster provider`
      operationId: addClusterProvider
      responses:
        '201':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
          application/json:
            schema:
                $ref: 'components/schemas.yaml#/Metadata'
        description: Cluster Providers Info
        required: true
    get: # documentation for GET operation for this path
          tags:
            - Cluster Providers
          summary: Get all cluster providers

          description: |
            Get all `cluster providers`

          operationId: getAllClusterProviders
          responses: # list of responses
            '200':
              description: Success
              content:
                application/json: # operation response mime type
                  schema:
                    $ref: 'components/schemas.yaml#/Metadata'
            '404':
              description: No cluster provider found
              content: {}

  /cluster-providers/{cluster-providers-name}:
    # parameters list that are used with each operation for this path
    parameters:
    - $ref: 'components/parameters.yaml#/clusterProviderName'
    get: # documentation for GET operation for this path
      tags:
        - Cluster Providers
      summary: Get cluster provider by name

      description: |
        Get `cluster provider`

      operationId: getClusterProviderByName
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
        '404':
          description: Cluster Provider not found
          content: {}
    put:
      tags:
        - Cluster Providers
      summary: Update cluster provider
      description: Update `cluster providers`
      operationId: updateClusterProviders
      responses:
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Cluster Provider not found
          content: {}
      # request body documentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'components/schemas.yaml#/Metadata'
        description: Update cluster provider object
        required: true
    delete: # documentation for DELETE operation for this path
      tags:
        - Cluster Providers
      summary: Delete cluster provider by name

      description: |
        Delete `cluster provider`

      operationId: deleteClusterProviderByName
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Cluster Provider not found
          content: {}

  /cluster-providers/{cluster-providers-name}/clusters:
    parameters:
      - $ref: 'components/parameters.yaml#/clusterProviderName'
    post:
      tags:
        - Clusters
      summary: Add Cluster
      description: Add a new `cluster`
      operationId: addClusterToClusterProvider
      responses:
        '201':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
          multipart/form-data: # Media type
            schema:            # Request payload
              $ref: 'components/schemas.yaml#/AppData'
    get: # documentation for GET operation for this path
      tags:
        - Clusters
      summary: Get all clusters for cluster provider

      description: |
        Get all `clusters for cluster provider`

      operationId: getAllClusterForClusterProvider
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/MetadataArray'
        '404':
          description: No clusters found in cluster provider
          content: {}
  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/clusterProviderName'
      - $ref: 'components/parameters.yaml#/clusterName'
    get: # documentation for GET operation for this path
      tags:
        - Clusters
      summary: Get Cluster

      description: |
        Get `cluster`

      operationId: getClusterForClusterProvider
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
            application/octet-stream: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/File'
            multipart/form-data: # Media type
              schema:            # Request payload
                $ref: 'components/schemas.yaml#/AppData'

        '404':
          description: Cluster not found
          content: {}
    put:
      tags:
        - Clusters
      summary: Update Cluster
      description: Update `cluster`
      operationId: updateClusterToClusterProvider
      responses:
        '200':
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
          description: Success
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Cluster not found
          content: {}
      # request body documentation
      requestBody:
        content:
          multipart/form-data: # Media type
            schema:            # Request payload
              $ref: 'components/schemas.yaml#/AppData'
        required: true

    delete: # documentation for DELETE operation for this path
      tags:
        - Clusters
      summary: Delete cluster

      description: |
        Delete `cluster`

      operationId: deleteClusterFromClusterProvider
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Cluster not found
          content: {}

############################ Cluster Labels API'S #################################################
  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/labels:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/clusterProviderName'
      - $ref: 'components/parameters.yaml#/clusterName'
    post:
      tags:
        - Clusters
      summary: Add label to Cluster
      description: Add a new label to `cluster`
      operationId: addLabelToCluster
      responses:
        '201':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/ClusterLabel'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
          application/json:
            schema:
                $ref: 'components/schemas.yaml#/ClusterLabel'
        description: Cluster Label
        required: true
    get: # documentation for GET operation for this path
          tags:
            - Clusters
          summary: Get all Labels

          description: |
            Get all `labels`

          operationId: getAllLabelsForCluster
          responses: # list of responses
            '200':
              description: Success
              content:
                application/json: # operation response mime type
                  schema:
                    $ref: 'components/schemas.yaml#/ClusterLabel'
            '404':
              description: No labels found
              content: {}

  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/labels/{cluster-label-name}:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/clusterProviderName'
      - $ref: 'components/parameters.yaml#/clusterName'
      - $ref: 'components/parameters.yaml#/clusterLabelName'
    get: # documentation for GET operation for this path
      tags:
        - Clusters
      summary: Get label

      description: |
        Get `cluster label`

      operationId: getLabelForCluster
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/ClusterLabel'
        '404':
          description: label not found
          content: {}
    put:
      tags:
        - Clusters
      summary: Update label
      description: Update label for `cluster`
      operationId: updateLabelForCluster
      responses:
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/ClusterLabel'
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Label not found
          content: {}
      requestBody:
        content:
          application/json:
            schema:
                $ref: 'components/schemas.yaml#/ClusterLabel'
        description: Cluster Label
        required: true
    delete: # documentation for DELETE operation for this path
      tags:
        - Clusters
      summary: Delete cluster label

      description: |
        Delete `label`

      operationId: deleteLabelForCluster
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Label not found
          content: {}

# Qurey for label - Get clusters for label
  /cluster-providers/{cluster-providers-name}/clusters/:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/clusterProviderName'
      - in: query
        name: label
        schema:
          type: string
          maxLength: 128
        required: true
    get: # documentation for GET operation for this path
      tags:
        - Clusters
      summary: Get clusters for label

      description: |
        Get `clusters for label`
      operationId: getClustersForLabel
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/MetadataArray'
        '404':
          description: label not found
          content: {}

############################ Cluster Key Value API'S #################################################
  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/kv-pairs:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/clusterProviderName'
      - $ref: 'components/parameters.yaml#/clusterName'
    post:
      tags:
        - Clusters
      summary: Add kv pair to Cluster
      description: Add kv pair to `cluster`
      operationId: addKvpairToCluster
      responses:
        '201':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/ClusterKv'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
          application/json:
            schema:
                $ref: 'components/schemas.yaml#/ClusterKv'
        description: Cluster KV Pair
        required: true
    get: # documentation for GET operation for this path
          tags:
            - Clusters
          summary: Get all KV Pairs

          description: |
            Get all `KV Pairs`

          operationId: getAllKvpairForCluster
          responses: # list of responses
            '200':
              description: Success
              content:
                application/json: # operation response mime type
                  schema:
                    $ref: 'components/schemas.yaml#/ClusterKv'
            '404':
              description: No labels found
              content: {}

  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/kv-pairs/{kv-pair-name}:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/clusterProviderName'
      - $ref: 'components/parameters.yaml#/clusterName'
      - $ref: 'components/parameters.yaml#/clusterKvpairName'
    get: # documentation for GET operation for this path
      tags:
        - Clusters
      summary: Get KV Pair

      description: |
        Get `KV pair` for cluster

      operationId: getKvpairForCluster
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/ClusterKv'
        '404':
          description: KV pair not found
          content: {}
    put:
      tags:
        - Clusters
      summary: Update KV Pair
      description: Update KV Pair for `cluster`
      operationId: updateKvPairForCluster
      responses:
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/ClusterKv'
        '400':
          description: Invalid data
          content: {}
        '404':
          description: KV Pair not found
          content: {}
      requestBody:
        content:
          application/json:
            schema:
                $ref: 'components/schemas.yaml#/ClusterKv'
        description: Cluster Label
        required: true
    delete: # documentation for DELETE operation for this path
      tags:
        - Clusters
      summary: Delete cluster KV pair

      description: |
        Delete `KV pair`

      operationId: deleteKvpairForCluster
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: KV pair not found
          content: {}

  #Query Key Value
  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/kv-pairs/{kv-pair-name}/:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/clusterProviderName'
      - $ref: 'components/parameters.yaml#/clusterName'
      - $ref: 'components/parameters.yaml#/clusterKvpairName'
      - in: query
        name: key
        schema:
          type: string
          maxLength: 128
        required: true
    get: # documentation for GET operation for this path
      tags:
        - Clusters
      summary: Query KV Pair

      description: |
        Query `KV pair` for cluster

      operationId: queryKvpairForCluster
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Kv'
        '404':
          description: KV pair not found
          content: {}

############################ Cluster Virtual Networks API'S #################################################
  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/networks:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/clusterProviderName'
      - $ref: 'components/parameters.yaml#/clusterName'
    post:
      tags:
        - Networks
      summary: Add virtual network in cluster
      description: Add a `virtual network in cluster`
      operationId: addVirtualNetworkToCluster
      responses:
        '201':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/VirtualNetwork'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
          application/json:
            schema:
                $ref: 'components/schemas.yaml#/VirtualNetwork'
        description: Add virtual network
        required: true
    get: # documentation for GET operation for this path
          tags:
            - Networks
          summary: Get all cluster virtual networks

          description: |
            Get all `virtual networks for a cluster`

          operationId: getAllVirtualNetworksForCluster
          responses: # list of responses
            '200':
              description: Success
              content:
                application/json: # operation response mime type
                  schema:
                    $ref: 'components/schemas.yaml#/VirtualNetwork'
            '404':
              description: No virtual networks found
              content: {}

  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/networks/{network-name}:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/clusterProviderName'
      - $ref: 'components/parameters.yaml#/clusterName'
      - $ref: 'components/parameters.yaml#/clusterNetworkName'
    get: # documentation for GET operation for this path
      tags:
        - Networks
      summary: Get virtual network

      description: |
        Get `virtual network`

      operationId: getVirtualNetworkForCluster
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/VirtualNetwork'
        '404':
          description: Network not found
          content: {}
    delete: # documentation for DELETE operation for this path
      tags:
        - Networks
      summary: Delete virtual network

      description: |
        Delete `virtual network`

      operationId: deleteVirtualNetworkForCluster
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Network not found
          content: {}

############################ Cluster Provider  Networks API'S #################################################
  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/provider-networks:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/clusterProviderName'
      - $ref: 'components/parameters.yaml#/clusterName'
    post:
      tags:
        - Networks
      summary: Add provider network in cluster
      description: Add a `provider network in cluster`
      operationId: addProviderNetworkToCluster
      responses:
        '201':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/ProviderNetwork'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
          application/json:
            schema:
                $ref: 'components/schemas.yaml#/ProviderNetwork'
        description: Add provider network
        required: true
    get: # documentation for GET operation for this path
          tags:
            - Networks
          summary: Get all cluster provider networks

          description: |
            Get all `provider networks for a cluster`

          operationId: getAllProviderNetworksForCluster
          responses: # list of responses
            '200':
              description: Success
              content:
                application/json: # operation response mime type
                  schema:
                    $ref: 'components/schemas.yaml#/ProviderNetwork'
            '404':
              description: No provider networks found
              content: {}

  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/provider-networks/{network-name}:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/clusterProviderName'
      - $ref: 'components/parameters.yaml#/clusterName'
      - $ref: 'components/parameters.yaml#/clusterNetworkName'
    get: # documentation for GET operation for this path
      tags:
        - Networks
      summary: Get Provider Network

      description: |
        Get `provider network`

      operationId: getProviderNetworkForCluster
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/ProviderNetwork'
        '404':
          description: Provider network not found
          content: {}
    delete: # documentation for DELETE operation for this path
      tags:
        - Networks
      summary: Delete Provider Network

      description: |
        Delete `Provider Network`

      operationId: deleteProviderNetworkForCluster
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Name not found
          content: {}

  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/apply:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/clusterProviderName'
      - $ref: 'components/parameters.yaml#/clusterName'
    post:
      tags:
        - Networks
      summary: Apply configuration for the cluster
      description: Apply configuration for the cluster to create networks
      operationId: applyNetworksForCluster
      responses:
        '201':
          description: Success
          content: {}
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content: {}

  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/terminate:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/clusterProviderName'
      - $ref: 'components/parameters.yaml#/clusterName'
    post:
      tags:
        - Networks
      summary: Apply configuration for the cluster
      description: Apply configuration for the cluster to create networks
      operationId: terminateNetworksForCluster
      responses:
        '201':
          description: Success
          content: {}
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content: {}

######################## Network Controller Intent API's##########################################
  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/network-controller-intent:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
    post:
      tags:
        - Network Controller Intent
      summary: Network Controller Intent API's
      description: Add a new `network controller intent`
      operationId: addNetworkControllerIntent
      responses:
        '201':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
    get: # documentation for GET operation for this path
      tags:
        - Network Controller Intent
      summary: Get all Network Controller Intent

      description: |
        Get all `network controller intent`

      operationId: getAllNetworkControllerIntent
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/MetadataArray'
        '404':
          description: No Network Controller Intent found
          content: {}
  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/network-controller-intent/{net-control-intent}:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/netControlIntent'
    get: # documentation for GET operation for this path
      tags:
        - Network Controller Intent
      summary: Get Network Controller Intent

      description: |
        Get `network controller intent`

      operationId: getNetworkControllerIntent
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
        '404':
          description: Network Controller Intent not found
          content: {}
    put:
      tags:
        - Network Controller Intent
      summary: Update Network Controller Intent
      description: Update `Network Controller Intent`
      operationId: updateNetworkControllerIntent
      responses:
        '200':
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/Metadata'
          description: Success
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Network Controller Intent not found
          content: {}
      # request body documentation
      requestBody:
        content:
          application/json: # operation response mime type
            schema:
              $ref: 'components/schemas.yaml#/Metadata'
        required: true
    delete: # documentation for DELETE operation for this path
      tags:
        - Network Controller Intent
      summary: Delete Network Controller Intent

      description: |
        Delete `Network Controller Intent`

      operationId: deleteNetworkControllerIntent
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Network Controller Intent not found
          content: {}
################## Workload Intents##################################
  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/network-controller-intent/{net-control-intent}/workload-intents:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/netControlIntent'
    post:
      tags:
        - Network Controller Intent
      summary: Network Controller Workload Intent API's
      description: Add a new `network controller workload intent`
      operationId: addNetworkControllerWorkloadIntent
      responses:
        '201':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/NetworkWorloadSpec'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/NetworkWorloadSpec'
    get: # documentation for GET operation for this path
      tags:
        - Network Controller Intent
      summary: Get Network Controller Workload Intent

      description: |
        Get all `network controller workload intent`

      operationId: getAllNetworkControllerWorkloadIntent
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/NetworkWorloadSpecArray'
        '404':
          description: No Network Controller Workload Intent found
          content: {}

  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/network-controller-intent/{net-control-intent}/workload-intents/{workload-intent-name}:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/netControlIntent'
      - $ref: 'components/parameters.yaml#/netControlWorkloadIntent'
    get: # documentation for GET operation for this path
      tags:
        - Network Controller Intent
      summary: Get Network Controller Workload Intent

      description: |
        Get `network controller workload intent`

      operationId: getNetworkControllerWorkloadIntent
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/NetworkWorloadSpec'
        '404':
          description: Network Controller Workload Intent not found
          content: {}
    put:
      tags:
        - Network Controller Intent
      summary: Update Network Controller Workload Intent
      description: Update `Network Controller Workload Intent`
      operationId: updateNetworkControllerWorkloadIntent
      responses:
        '200':
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/NetworkWorloadSpec'
          description: Success
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Network Controller Workload Intent not found
          content: {}
      # request body documentation
      requestBody:
        content:
          application/json: # operation response mime type
            schema:
              $ref: 'components/schemas.yaml#/NetworkWorloadSpec'
        required: true
    delete: # documentation for DELETE operation for this path
      tags:
        - Network Controller Intent
      summary: Delete Network Controller Workload Intent

      description: |
        Delete `Network Controller Workload Intent`

      operationId: deleteNetworkControllerWorkloadIntent
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Network Controller Workload Intent not found
          content: {}

################## Workload Intents Interfaces ##################################
  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/network-controller-intent/{net-control-intent}/workload-intents/{workload-intent-name}/interfaces:
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/netControlIntent'
      - $ref: 'components/parameters.yaml#/netControlWorkloadIntent'
    post:
      tags:
        - Network Controller Intent
      summary: Network Controller Workload Interface API's
      description: Add a new `network controller workload interface`
      operationId: addNetworkControllerWorkloadInterface
      responses:
        '201':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/NetworkWorloadInterface'
        '405':
          description: Invalid Input
          content: {}
      requestBody:
        content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/NetworkWorloadInterface'
    get: # documentation for GET operation for this path
      tags:
        - Network Controller Intent
      summary: Get all Network Controller Workload Interface

      description: |
        Get all `network controller workload interface`

      operationId: getAllNetworkControllerWorkloadInterface
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/NetworkWorloadInterfaceArray'
        '404':
          description: No Network Controller Workload Interface found
          content: {}
  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/network-controller-intent/{net-control-intent}/workload-intents/{workload-intent-name}/interfaces/{interface-name}:
    # parameters list that are used with each operation for this path
    parameters:
      - $ref: 'components/parameters.yaml#/projectName'
      - $ref: 'components/parameters.yaml#/compositeAppName'
      - $ref: 'components/parameters.yaml#/compositeAppVersion'
      - $ref: 'components/parameters.yaml#/netControlIntent'
      - $ref: 'components/parameters.yaml#/netControlWorkloadIntent'
      - $ref: 'components/parameters.yaml#/netControlWorkloadInterface'
    get: # documentation for GET operation for this path
      tags:
        - Network Controller Intent
      summary: Get Network Controller Workload Interface

      description: |
        Get `network controller workload interface`

      operationId: getNetworkControllerWorkloadInterface
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/NetworkWorloadInterface'
        '404':
          description: Network Controller Workload Interface not found
          content: {}
    put:
      tags:
        - Network Controller Intent
      summary: Update Network Controller Workload Interface
      description: Update `Network Controller Workload Interface`
      operationId: updateNetworkControllerWorkloadInterface
      responses:
        '200':
          content:
            application/json: # operation response mime type
              schema:
                $ref: 'components/schemas.yaml#/NetworkWorloadInterface'
          description: Success
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Network Controller Workload Interface not found
          content: {}
      # request body documentation
      requestBody:
        content:
          application/json: # operation response mime type
            schema:
              $ref: 'components/schemas.yaml#/NetworkWorloadInterface'
        required: true

    delete: # documentation for DELETE operation for this path
      tags:
        - Network Controller Intent
      summary: Delete Network Controller Workload Interface

      description: |
        Delete `Network Controller Workload Interface`

      operationId: deleteNetworkControllerWorkloadInterface
      responses: # list of responses
        '204':
          description: Deleted
          content: {}
        '400':
          description: Invalid data
          content: {}
        '404':
          description: Network Controller Workload Interface not found
          content: {}