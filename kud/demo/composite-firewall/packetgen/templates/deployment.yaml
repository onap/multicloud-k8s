apiVersion: kubevirt.io/v1alpha3
kind: VirtualMachine
metadata:
  name: {{ include "packetgen.fullname" . }}
  labels:
    release: {{ .Release.Name }}
    app: {{ include "packetgen.name" . }}
    chart: {{ .Chart.Name }}
spec:
  running: true
  template:
    metadata:
      labels:
        app: {{ include "packetgen.name" .}}
        release: {{ .Release.Name }}
      annotations:
        app: {{ include "packetgen.name" . }}
        release: {{ .Release.Name }}
    spec:
      domain:
        cpu:
          model: host-model
        devices:
          disks:
            - name: containerdisk
              disk:
                bus: virtio
            - name: cloudinitdisk
              disk:
                bus: virtio
          interfaces:
          - name: default
            bridge: {}
          - name: unprotected
            macAddress: ee:f0:75:e0:b6:26
            bridge: {}
          - name: emco
            macAddress: 0a:c0:37:55:f5:ab
            bridge: {}
        resources:
          requests:
            memory: {{ .Values.resources.limits.memory }}
      networks:
      - name: default
        pod: {}
      - name: unprotected
        multus:
          networkName: {{ .Values.global.unprotectedNetworkName }}
      - name: emco
        multus:
          networkName: {{ .Values.global.emcoPrivateNetworkName }}
      volumes:
        - name: cloudinitdisk
          cloudInitNoCloud:
            networkData: |
              version: 2
              ethernets:
                enp1s0:
                  dhcp4: true
                eth1:
                  match:
                    macaddress: "ee:f0:75:e0:b6:26"
                  set-name: eth1
                  dhcp4: true
                eth2:
                  match:
                    macaddress: "0a:c0:37:55:f5:ab"
                  set-name: eth2
                  dhcp4: true
            userData: |
              #cloud-config
              ssh_pwauth: True
              users:
              - name: admin
                gecos: User
                primary-group: admin
                groups: users
                sudo: ALL=(ALL) NOPASSWD:ALL
                lock_passwd: false
                passwd: "$6$rounds=4096$QA5OCKHTE41$jRACivoPMJcOjLRgxl3t.AMfU7LhCFwOWv2z66CQX.TSxBy50JoYtycJXSPr2JceG.8Tq/82QN9QYt3euYEZW/"
              runcmd:
                - export demo_artifacts_version={{ .Values.global.demoArtifactsVersion }}
                - export vfw_private_ip_0={{ .Values.global.vfwPrivateIp0 }}
                - export vsn_private_ip_0={{ .Values.global.vsnPrivateIp0 }}
                - export protected_net_cidr={{ .Values.global.protectedNetCidr }}
                - export dcae_collector_ip={{ .Values.global.dcaeCollectorIp }}
                - export dcae_collector_port={{ .Values.global.dcaeCollectorPort }}
                - export protected_net_gw={{ .Values.global.protectedNetGw }}
                - export protected_private_net_cidr={{ .Values.global.protectedPrivateNetCidr }}
                - wget -O - https://git.onap.org/multicloud/k8s/plain/kud/tests/vFW/packetgen | sudo -E bash
        - name: containerdisk
          containerDisk:
            image: integratedcloudnative/ubuntu:16.04
            imagePullPolicy: IfNotPresent
