apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "firewall.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "firewall.name" . }}
    helm.sh/chart: {{ include "firewall.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app: vFirewall
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: vFirewall
      app.kubernetes.io/name: {{ include "firewall.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "firewall.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: vFirewall
      annotations:
        VirtletLibvirtCPUSetting: |
          mode: host-model
        VirtletCloudInitUserData: |
          ssh_pwauth: True
          users:
          - name: admin
            gecos: User
            primary-group: admin
            groups: users
            sudo: ALL=(ALL) NOPASSWD:ALL
            lock_passwd: false
            # the password is "admin"
            passwd: "\$6\$rounds=4096\$QA5OCKHTE41\$jRACivoPMJcOjLRgxl3t.AMfU7LhCFwOWv2z66CQX.TSxBy50JoYtycJXSPr2JceG.8Tq/82QN9QYt3euYEZW/"
            ssh_authorized_keys:
             # $ssh_key
          $proxy
          runcmd:
            $cloud_init_proxy
            - wget -O - https://git.onap.org/multicloud/k8s/plain/kud/tests/vFW/firewall | sudo -E bash
        VirtletSSHKeys: |
         # $ssh_key
        VirtletRootVolumeSize: 5Gi
        k8s.v1.cni.cncf.io/networks: '[{ "name": {{ .Values.network.ovnMultusNetworkName | quote }}}]'
        ovnNetwork: '[
            { "name": {{ .Values.network.unprotectedNetworkName | quote }}, "ipAddress": {{ .Values.network.vfwPrivateIp0 | quote }}, "interface": "eth1" , "defaultGateway": "false"},
            { "name": {{ .Values.network.protectedNetworkName | quote }}, "ipAddress": {{ .Values.network.vfwPrivateIp1 | quote }}, "interface": "eth2", "defaultGateway": "false" },
           #{ "name": {{ .Values.network.onapPrivateNetworkName | quote }}, "ipAddress": {{ .Values.network.vfwPrivateIp2 | quote }}, "interface": "eth3" , "defaultGateway": "false"}
        ]'
        kubernetes.io/target-runtime: virtlet.cloud
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: extraRuntime
                operator: In
                values:
                - virtlet
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          tty: true
          stdin: true
          resources:
            limits:
              memory: {{ .Values.resources.memory }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
